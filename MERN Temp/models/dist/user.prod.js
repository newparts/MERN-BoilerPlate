"use strict";var mongoose=require("mongoose"),bcrypt=require("bcrypt"),saltRounds=10,jwt=require("jsonwebtoken"),userSchema=mongoose.Schema({name:{type:String,maxlength:50},email:{type:String,trim:!0,unique:1},password:{type:String,minlength:6},lastname:{type:String,maxlength:50},role:{type:Number,default:0},token:{type:String},tokenExp:{type:Number}});userSchema.pre("save",function(n){var r=this;r.isModified("password")?bcrypt.genSalt(saltRounds,function(e,t){if(e)return n(e);bcrypt.hash(r.password,t,function(e,t){if(e)return n(e);r.password=t,n()})}):n()}),userSchema.methods.comparePassword=function(e,n){bcrypt.compare(e,this.password,function(e,t){if(e)return n(e);n(null,t)})},userSchema.methods.generateToken=function(n){var e=this,t=jwt.sign(e._id,toHexString(),"secret");e.token=t,e.save(function(e,t){if(e)return n(e);n(null,t)})},userSchema.statics.findByToken=function(n,r){var s=this;jwt.verify(n,"secret",function(e,t){s.findOne({_id:t,token:n},function(e,t){if(e)return r(e);r(null,t)})})};var User=mongoose.model("User",userSchema);module.export={User:User};